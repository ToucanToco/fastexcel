[package]
name = "fastexcel"
version = "0.16.0"
description = "A fast excel reader for Rust and Python"
rust-version = "1.85.0"
edition = "2024"
license = "MIT"
homepage = "https://github.com/ToucanToco/fastexcel"
repository = "https://github.com/ToucanToco/fastexcel.git"
readme = "README.md"
include = [
    "/pyproject.toml",
    "/README.md",
    "/LICENSE",
    "/Makefile",
    "/src",
    "/python/fastexcel",
    "!__pycache__",
    "!*.pyc",
    "!*.so",
]

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html
[lib]
name = "fastexcel"
crate-type = ["cdylib", "rlib"]

[dependencies]
arrow-array = { version = "^56.1.0", features = ["ffi"], optional = true }
arrow-pyarrow = { version = "^56.1.0", optional = true }
arrow-schema = { version = "^56.1.0", optional = true }
calamine = { version = "^0.30.1", features = ["dates"] }
chrono = { version = "^0.4.42", default-features = false }
log = "^0.4"
polars-core = { version = ">=0.50", default-features = false, features = [
    "dtype-date",
    "dtype-datetime",
    "dtype-duration",
], optional = true }
pyo3 = { version = "^0.25", features = ["abi3-py39"], optional = true }
pyo3-arrow = { version = "0.11", default-features = false, optional = true }
pyo3-log = { version = "^0.12.4", optional = true }

[dev-dependencies]
anyhow = "1.0.99"
pretty_assertions = { version = "^1.4.1", features = ["unstable"] }
rstest = { version = "^0.26.1", default-features = false }

# NOTE: This is a hack to bypass pyo3 limitations when testing:
# https://pyo3.rs/v0.22.3/faq.html#i-cant-run-cargo-test-or-i-cant-build-in-a-cargo-workspace-im-having-linker-issues-like-symbol-not-found-or-undefined-reference-to-_pyexc_systemerror
[features]
default = []
__arrow = ["dep:arrow-schema", "dep:arrow-array"]
python = ["__arrow", "dep:pyo3", "dep:pyo3-log", "dep:pyo3-arrow"]
extension-module = ["pyo3/extension-module"]
polars = ["dep:polars-core"]
pyarrow = ["dep:arrow-pyarrow", "python"]
# Private features for internal usage, should not be used directly as they may
# change without notice
__pyo3-tests = [
    # feature for tests only. This makes Python::with_gil auto-initialize Python
    # interpreters, which allows us to instantiate Python objects in tests
    # (see https://pyo3.rs/v0.22.3/features#auto-initialize)
    "pyo3/auto-initialize",
    "pyarrow",
]
__rust-tests-standalone = []
__rust-tests-polars = ["polars"]
# Private feature for maturin usage, should not be used directly
__maturin = ["extension-module", "pyarrow"]
